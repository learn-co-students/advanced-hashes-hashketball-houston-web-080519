
# def team_colors(team_name, game_hash)
#   game_hash.each do |location, team_data|
#     if team_hash[:name] == team_name
#       return team_hash[:colors]
#     end
#   end 
# end

# def shoe_size(players_name) 
#   game_hash.each do |location, team_data|
#                                             binding.pry
#       team_data.each do |attribute, data|
#                                             binding.pry
#           if attribute[:players][players_name] = players_name
#             return game_hash[:location][:]
# end 


# def player_with_longest_name
#   max_player = nil
#   game_hash.each do |team, team_hash|
#     team_hash[:players].each do |player, player_hash|
#       max_player ||= player_hash
#       max_player = player_hash if player_hash[:name].length > max_player[:name].length
#     end
#   end
#   max_player[:name]
# end













# def num_points_scored(name)
#   answer = nil
#   game_hash.each do |team, details_hash|
#     players_array = details_hash[:players]
#     binding.pry
#       players_array.each do |player_details_hash|
#         if player_details_hash[0] == name
#           answer = player_details_hash[3]
#         end
#       end
#   end
#   answer
# end

# p num_points_scored("Bismak Biyombo")


# def shoe_size(name)
#   answer = nil
#   game_hash.each do |team, details_hash|
#     players_array = details_hash[:players]
#       players_array.each do |player_details_hash|
#         if player_details_hash[:name] == name
#           answer = player_details_hash[:shoe]
#         end
#       end
#   end
#   answer
# end



# p team_colors(home, game_hash)
  



# def team_colors(team_name, game)
#   game.each do |team, team_hash|
#     if team_hash[:name] == team_name
#       return (team_hash[:colors].collect do |color|
#         color
#       end)
#     end
#   end
# end














# def num_points_scored(player)
#   if game_hash[:home][:players].include?(player)
#   game_hash[:home][:players][player][:stats][:points]
#   elsif game_hash[:away][:players].include?(player)
#   game_hash[:away][:players][player][:stats][:points]
#   else
#   "No player found."
#   end
# end

# # puts num_points_scored("blanko", hashketball)


# def shoe_size(player)
#   player.capitalize!
#   if game_hash[:home][:players].include?(player)
#   game_hash[:home][:players][player][:shoe_size]
#   elsif game_hash[:away][:players].include?(player)
#   game_hash[:away][:players][player][:shoe_size]
#   else
#   "No player found."
#   end
# end


# def num_points_scored(playerName)
#   game_hash.each do |home_away, keys|
#     keys[:players].each do |player|
#       if player[:player_name] == playerName
#       return player[:points] if player[:player_name] == playerName
#         # player[:points]
        
#       #   if keys[:players][:player_name] = playerName 
          
#       # 
#     end
#   end
# end
# def num_points_scored(name)
#   hash = game_hash
#   hash.each do |location, info| 
#     info.each do |attribute, stuff| 
#       if stuff.include?(name) 
#       return hash[location][attribute][name][:points]
#       end
#     end
#   end
# end



# def num_points_scored(playa)
#   hashCopy = game_hash
#   hashCopy.each do |homeOrAway, subsetParts|
#   subsetParts[:players].each do 
#   end   
# end 






# def num_points_scored(player_name) 
#   game_hash.each do |x, y|
#     y[:away].each do |sections|
#       sections[:players].each do |player|
#   return player[:points] if player[:player_name] == player_name
#     end
#   end
# end
# end




# def num_points_scored(name)
#   hash = game_hash
#   hash.each do |location, info| 
#     info.each do |attribute, stuff| 
#       if stuff.include?(name) 
#       return hash[location][attribute][name][:points]
#       end
#     end
#   end
# end



#   Alternate code
# def num_points_scored(player_n)
#   player_stats(player_n)[:points]
# end


# def shoe_size(player_n)
#   game_hash.each do |home_away, keys|
#     keys[:players].each do |player|
#       return player[:shoe] if player[:player_name] == player_n
#     end
#   end
# end
# shoe_size("Ben Gordon")


 # Alternate code
# def shoe_size(player_n)
#   player_stats(player_n)[:shoe]
# end





# def team_names
#   game_hash.map {|home_away, keys| keys[:team_name]}
# end


# def player_numbers(team_name)
#   game_hash.each do |home_away, keys|
#     if keys[:team_name] == team_name
#       return keys[:players].map { |player| player[:number] }
#     end
#   end
# end

# def player_stats(player_n)
#   game_hash.each do |home_away, keys|
#     keys[:players].each do |player|
#       if player[:player_name] == player_n
#         return player.delete_if { |stat, value| [:player_name].include?(stat)}
#       end
#     end
#   end
# end

# def big_shoe_rebounds
#   biggest = 0
#   rebounds = 0
#   game_hash.each do |home_away, keys|
#     keys[:players].each do |player|
#       size = player[:shoe]
#       if size > biggest
#         biggest = size
#         rebounds = player[:rebounds]
#       end
#     end
#   end
#   rebounds
# end


# # Bonus

# def most_points_scored
#   most_points = 0
#   mvp = ''
#   game_hash.each do |home_away, keys|
#     keys[:players].each do |player|
#       points = player[:points]
#       if points > most_points
#         most_points = points
#         mvp = player[:player_name]
#       end
#     end
#   end
#   mvp
# end

# def winning_team
#   total_points = 0
#   win_team = ''
#   game_hash.each do |home_away, keys|
#     team_points = 0
#     team_name = game_hash[home_away][:team_name]
#     keys[:players].each do |player|
#       points = player[:points]
#       team_points += points
#     end
#     win_team, total_points = team_name, team_points if team_points > total_points
#   end
#   return win_team
# end

# def player_with_longest_name
#   longest = ''
#   longest_length = 0
#   game_hash.each do |home_away, keys|
#     keys[:players].each do |player|
#       name_length = player[:player_name].length
#       longest, longest_length = player[:player_name], name_length if name_length > longest_length
#     end
#   end
#   return longest
# end


# # Super Bonus

# def long_name_steals_a_ton?
#   steals_most = ''
#   most_steals = 0
#   game_hash.each do |home_away, keys|
#     keys[:players].each do |player|
#       steals_most, most_steals = player[:player_name], player[:steals] if player[:steals] > most_steals
#     end
#   end
#   return true if steals_most == player_with_longest_name

# end